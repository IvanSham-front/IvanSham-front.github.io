{"version":3,"sources":["functions/sortDataUp.js","functions/sortDataDown.js","components/icons/ArrowUp.js","components/icons/ArrowDown.js","components/Table.js","components/Pager.js","components/Filter.js","components/App.js","registerServiceWorker.js","index.js"],"names":["data","sort","a","b","id","firstName","lastName","email","phone","className","Table","props","state","users","headClick","bind","event","this","target","dataset","setState","sortDataDown","sortDataUp","map","user","n","Math","floor","random","onClick","data-sort","ArrowDown","ArrowUp","renderTbody","Component","Pager","dataSplit","count","Number","pagesCount","ceil","length","i","j","paginateData","push","slice","pagerDefault","countBtn","result","pagerCount","e","pagerClick","renderButtons","Filter","handleChange","filterOnChange","value","filterValue","onChange","placeholder","type","App","isLoaded","window","onload","fetch","then","responce","json","defaultData","tableData","saveTableData","filterData","forEach","item","key","includes","renderTable","renderPager","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.30bc8102.chunk.js","sourcesContent":["export default (data, sort) => {\r\n  switch (sort) {\r\n    case 'id':\r\n      return data.sort((a, b) => {\r\n        if (a.id > b.id) {\r\n          return 1;\r\n        } else if (a.id < b.id) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'firstName':\r\n      return data.sort((a, b) => {\r\n        if (a.firstName > b.firstName) {\r\n          return 1;\r\n        } else if (a.firstName < b.firstName) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'lastName':\r\n      return data.sort((a, b) => {\r\n        if (a.lastName > b.lastName) {\r\n          return 1;\r\n        } else if (a.lastName < b.lastName) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'email':\r\n      return data.sort((a, b) => {\r\n        if (a.email > b.email) {\r\n          return 1;\r\n        } else if (a.email < b.email) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'phone':\r\n      return data.sort((a, b) => {\r\n        if (a.phone > b.phone) {\r\n          return 1;\r\n        } else if (a.phone < b.phone) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n","export default (data, sort) => {\r\n  switch (sort) {\r\n    case 'id':\r\n      return data.sort((a, b) => {\r\n        if (a.id > b.id) {\r\n          return -1;\r\n        } else if (a.id < b.id) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'firstName':\r\n      return data.sort((a, b) => {\r\n        if (a.firstName > b.firstName) {\r\n          return -1;\r\n        } else if (a.firstName < b.firstName) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'lastName':\r\n      return data.sort((a, b) => {\r\n        if (a.lastName > b.lastName) {\r\n          return -1;\r\n        } else if (a.lastName < b.lastName) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'email':\r\n      return data.sort((a, b) => {\r\n        if (a.email > b.email) {\r\n          return -1;\r\n        } else if (a.email < b.email) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    case 'phone':\r\n      return data.sort((a, b) => {\r\n        if (a.phone > b.phone) {\r\n          return -1;\r\n        } else if (a.phone < b.phone) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return <span className=\"arrows\">&#9650;</span>\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return <span className=\"arrows\">&#9660;</span>\r\n};\r\n","import React, { Component } from 'react';\r\nimport sortDataUp from '../functions/sortDataUp';\r\nimport sortDataDown from '../functions/sortDataDown';\r\n\r\nimport ArrowUp from './icons/ArrowUp';\r\nimport ArrowDown from './icons/ArrowDown';\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sort: '',\r\n      users: this.props.data\r\n    };\r\n    this.headClick = this.headClick.bind(this);\r\n  }\r\n\r\n  headClick(event) {\r\n    const users = this.props.data;\r\n    const sort = event.target.dataset.sort;\r\n    if (!sort) {\r\n      return;\r\n    }\r\n\r\n    if (sort === this.state.sort) {\r\n      this.setState({ sort: '', users: sortDataDown(users, sort) });\r\n    } else {\r\n      this.setState({ sort, users: sortDataUp(users, sort) });\r\n    }\r\n  }\r\n\r\n  renderTbody() {\r\n    return this.props.data.map(user => {\r\n      let n = Math.floor(Math.random() * 100000);\r\n      return (\r\n        <tr key={user.id + '-' + n}>\r\n          <td className=\"row\">{user.id}</td>\r\n          <td>{user.firstName}</td>\r\n          <td>{user.lastName}</td>\r\n          <td>{user.email}</td>\r\n          <td>{user.phone}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-striped table\">\r\n          <thead>\r\n            <tr onClick={this.headClick}>\r\n              <th data-sort=\"id\">\r\n                #\r\n                {this.state.sort === 'id' ? <ArrowDown /> : <ArrowUp />}\r\n              </th>\r\n              <th data-sort=\"firstName\">\r\n                firstname\r\n                {this.state.sort === 'firstName' ? <ArrowDown /> : <ArrowUp />}\r\n              </th>\r\n              <th data-sort=\"lastName\">\r\n                lastname\r\n                {this.state.sort === 'lastName' ? <ArrowDown /> : <ArrowUp />}\r\n              </th>\r\n              <th data-sort=\"email\">\r\n                email\r\n                {this.state.sort === 'email' ? <ArrowDown /> : <ArrowUp />}\r\n              </th>\r\n              <th data-sort=\"phone\">\r\n                phone\r\n                {this.state.sort === 'phone' ? <ArrowDown /> : <ArrowUp />}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderTbody()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Pager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    this.dataSplit = this.dataSplit.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.dataSplit(this.props.data, this.props.count);\r\n  }\r\n\r\n  dataSplit(data, count) {\r\n    count = Number(count);\r\n\r\n    const pagesCount = Math.ceil(data.length / count);\r\n    let i = 0;\r\n    let j = count;\r\n    let paginateData = [];\r\n    while (i < data.length) {\r\n      paginateData.push(data.slice(i, j));\r\n\r\n      i += count;\r\n      j += count;\r\n    }\r\n\r\n    this.setState({ pagesCount, paginateData });\r\n\r\n    this.props.pagerDefault(paginateData[0], this.dataSplit);\r\n  }\r\n\r\n  renderButtons(countBtn) {\r\n    let result = [];\r\n    for (let i = 0; i < countBtn; i++) {\r\n      result.push(\r\n        <li \r\n        className={this.props.pagerCount === i + 1 ? \"page-item active\" : \"page-item\"}\r\n        key={i}\r\n        >\r\n          <button\r\n            onClick={e => this.props.pagerClick(this.state.paginateData[i], i + 1)}\r\n            className=\"page-link\"\r\n          >\r\n            {i + 1}\r\n          </button>\r\n        </li>\r\n\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    return <ul className=\"pagination pag\">{this.renderButtons(this.state.pagesCount)}</ul>;\r\n  }\r\n}\r\n\r\nexport default Pager;\r\n","import React, { Component } from 'react';\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.filterOnChange(event.target.value);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-group row\">\r\n        <div className=\"col-12 input-group input-group-lg\">\r\n          <input\r\n            value={this.props.filterValue}\r\n            onChange={this.handleChange}\r\n            className=\"form-control\"\r\n            placeholder=\"Search\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport Pager from './Pager';\r\nimport Filter from './Filter';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoaded: false,\r\n      data: [],\r\n      filterValue: '',\r\n      pagerCount: 1\r\n    };\r\n\r\n    this.pagerClick = this.pagerClick.bind(this);\r\n    this.pagerDefault = this.pagerDefault.bind(this);\r\n    this.filterOnChange = this.filterOnChange.bind(this);\r\n\r\n    const url = 'http://www.filltext.com/?rows=500&id={number|500}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}';\r\n    window.onload = () => {\r\n      fetch(url)\r\n      .then(responce => responce.json())\r\n      .then(data => {\r\n        this.setState({\r\n          data,\r\n          isLoaded: true\r\n        })\r\n        this.state.dataSplit(data, 50);\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  pagerDefault(defaultData, dataSplit) {\r\n    this.setState({ tableData: defaultData, dataSplit});\r\n    this.setState({ saveTableData: defaultData})\r\n  }\r\n\r\n  pagerClick(paginateData, i) {\r\n    this.setState({ tableData: paginateData , pagerCount: i});\r\n    \r\n  }\r\n\r\n  filterOnChange(filterValue) {\r\n    this.setState({filterValue})\r\n    const filterData = this.filterData(this.state.data, filterValue);\r\n    if (filterValue.length < 1) {\r\n      this.pagerDefault(this.state.saveTableData, this.state.dataSplit);\r\n    } else {\r\n      this.setState({ tableData: filterData });\r\n    }\r\n  }\r\n\r\n  \r\n  filterData(data, value) {\r\n    if (!value) {\r\n      return [];\r\n    }\r\n    const result = [];\r\n    data.forEach(item => {\r\n      for (let key in item) {\r\n        if (typeof item[key] == 'string' && item[key].includes(value)) {\r\n          result.push(item);\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n  renderTable() {\r\n    if (!this.state.tableData) {\r\n      return <div className=\"spinner-border loading\"></div>;\r\n    }\r\n\r\n    return <Table data={this.state.tableData} />;\r\n  }\r\n\r\n  renderPager() {\r\n    if (!this.state.data) {\r\n      return <b>Pager Loading...</b>;\r\n    }\r\n    return (\r\n      <Pager\r\n        data={this.state.data}\r\n        count=\"50\"\r\n        pagerClick={this.pagerClick}\r\n        pagerDefault={this.pagerDefault}\r\n        pagerCount={this.state.pagerCount}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <h1 className=\"text-center\">Users List</h1>\r\n        <Filter data={this.state.data}\r\n          filterValue={this.state.filterValue}\r\n          filterOnChange={this.filterOnChange} />\r\n        {this.renderTable()}\r\n        {this.renderPager()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './css/styles.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}