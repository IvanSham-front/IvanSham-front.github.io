{"version":3,"sources":["components/CommentsItem.js","components/CommentForm.js","actions/actions.js","containers/app.js","reportWebVitals.js","reducers/comments.js","index.js"],"names":["CommentsItem","props","comments","deleteComment","className","map","comment","userName","date","onClick","id","title","CommentForm","addComment","onSubmit","e","preventDefault","name","document","querySelector","value","type","placeholder","required","dateOptions","day","month","hour","minute","CommentBlock","connect","state","dispatch","max","Math","floor","random","Date","toLocaleString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","filter","element","store","createStore","localStorage","JSON","parse","subscribe","stringify","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19a0799c.chunk.js","sourcesContent":["import React from 'react' ;\r\n\r\n\r\nconst CommentsItem = (props) => {\r\n    const { comments , deleteComment } = props;\r\n\r\n    return(\r\n\r\n        <ul className=\"comments-block__ul\">\r\n        { \r\n          comments.map((comment => {\r\n            return (\r\n              <li className=\"comments-block__li\" key={comment.id}>\r\n                  <div>\r\n                      <span className=\"comments-block__name-author\">{comment.userName}</span>\r\n                      <p className=\"comments-block__name-comment\">{comment.comment}</p>\r\n                  </div>\r\n      \r\n                  <div>\r\n                      <span className=\"comments-block__date-comment\">\r\n                      {comment.date}\r\n                      </span>\r\n                      <button\r\n                      className=\"comments-block__btn-close\"\r\n                      onClick={() => deleteComment(comment.id)}\r\n                      title=\"Удалить комментарий\"\r\n                      >\r\n                      X\r\n                      </button>\r\n                  </div>\r\n               </li>\r\n            );\r\n          }))\r\n        }\r\n      </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default CommentsItem;","import React from 'react';\r\n\r\nconst CommentForm = (props) => {\r\n    const { addComment } = props;\r\n    return (\r\n        <form className=\"comments-block__inputs\"\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                const name = document.querySelector('#userName');\r\n                const comment = document.querySelector('#userComment');\r\n                addComment(name.value, comment.value);\r\n                name.value = '';\r\n                comment.value = '';\r\n                }\r\n            }\r\n        >\r\n           \r\n            <input\r\n                type=\"text\" \r\n                id='userName'\r\n                className=\"comments-block__input_name\"\r\n                placeholder=\"Введите Имя\"\r\n                required={true}\r\n            />\r\n\r\n            <textarea\r\n                type=\"text\"\r\n                id=\"userComment\"\r\n                className=\"comments-block__input_comment\" \r\n                placeholder=\"Ваш комментарий\" \r\n                required={true}\r\n            />\r\n\r\n            <button \r\n                type=\"submit\" \r\n                className=\"comments-block__btn-add\"\r\n            >\r\n                Добавить комментарий\r\n            </button> \r\n      </form> \r\n    )\r\n}\r\n\r\nexport default CommentForm;","function getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst dateOptions = { day: 'numeric', month: 'long', hour: 'numeric', minute: 'numeric'};\r\n\r\nexport const addComment = (userName, comment) => {\r\n\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        id: getRandomInt(10000), \r\n        userName,\r\n        comment,\r\n        date: new Date().toLocaleString('ru', dateOptions)\r\n    }\r\n}\r\n\r\nexport const deleteComment = (id) => {\r\n    return {\r\n        type: 'DELETE_COMMENT',\r\n        id\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport CommentsItem from '../components/CommentsItem';\r\nimport CommentForm from '../components/CommentForm';\r\nimport { addComment, deleteComment } from '../actions/actions'\r\n\r\nlet CommentBlock = (props) => {\r\n    const { addComment, comments, deleteComment } = props\r\n   \r\n    return(\r\n        <aside className=\"comments-block\">\r\n        <h1 className=\"comments-block__title\">Комментарии</h1>\r\n\r\n        <CommentForm\r\n          addComment={addComment}\r\n        />\r\n\r\n        <CommentsItem\r\n          comments={comments}\r\n          deleteComment={deleteComment}\r\n        />\r\n      </aside>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addComment: (name, comment) => dispatch(addComment(name, comment)),\r\n    deleteComment: (id) => dispatch(deleteComment(id)),\r\n  }\r\n}\r\n\r\nCommentBlock = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CommentBlock);\r\n\r\nexport default CommentBlock;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const comments = (state = [], action) => {\r\n\r\n    \r\n    switch (action.type) {\r\n        case 'ADD_COMMENT': \r\n        return [\r\n            ...state,\r\n            {id: action.id, userName: action.userName, comment: action.comment, date: action.date}\r\n        ]\r\n        \r\n        case 'DELETE_COMMENT':\r\n            return state.filter(element => element.id !== action.id);\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default comments;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CommentBlock from './containers/app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createStore } from 'redux';\r\nimport comments from './reducers/comments';\r\n\r\nconst checkLocalStorage = () => {\r\n  if (localStorage['comments']) {\r\n    return JSON.parse(localStorage['comments'])\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nconst store = createStore(comments, checkLocalStorage());\r\n\r\nstore.subscribe(() => {\r\n  localStorage['comments'] = JSON.stringify(store.getState())\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CommentBlock store={store}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}